import { PlayArrow, PlayDisabled } from "@mui/icons-material";
import Head from "next/head";
import Link from "next/link";

export const getStaticPaths = async () => {
  const res = await fetch(`http://localhost:3001/torneos`);
  const data = await res.json();

  const paths = data.data.map((tournament) => {
    return {
      params: { tournament: tournament.name.toString() },
    };
  });

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps = async (context) => {
  const name = context.params.tournament;
  const res = await fetch(`http://localhost:3001/torneos/${name}/partidos`);
  const data = await res.json();

  const response = await fetch("http://localhost:3001/torneos");
  const allTournaments = await response.json();
  const tournament = allTournaments.data.filter(
    (tournamentEl) => tournamentEl.name === name
  );

  const teamsResponse = await fetch("http://localhost:3001/equipos");
  const allTeams = await teamsResponse.json();

  return {
    props: {
      tournamentMatches: data,
      allTournamentsData: allTournaments,
      tournament: tournament,
      allTeamData: allTeams,
    },
  };
};

const Details = ({
  tournament,
  tournamentMatches,
  allTournamentsData,
  allTeamData,
}) => {
  let tournamentGoals = 0;
  tournamentMatches.data.map((match) => {
    let matchGoals = match.awayScore + match.homeScore;
    tournamentGoals += matchGoals;
  });

  const getLogo = (teamName) => {
    let teamLogo = allTeamData.data.filter(
      (teamData) => teamData.name === teamName
    );
    return teamLogo[0].logo;
  };

  return (
    <>
      <Head>
        <title>{tournament[0].name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href={tournament[0].logo} />
      </Head>
      <div>
        <h1>{tournament[0].name}</h1>
        <img width="169rem" src={tournament[0].logo} />
        <h2>Estadísticas</h2>
        <div>
          <p>Goles anotados: {tournamentGoals}</p>
          <p>
            Promedio de gol por partido:{" "}
            {(tournamentGoals / tournamentMatches.data.length).toFixed(2)}
          </p>
          {tournament[0].playlist === null ? (
            <p>Este torneo no fue filmado.</p>
          ) : (
            <p>
              Playlist:{" "}
              <Link href={tournament[0].playlist} key={tournament[0]._id}>
                <PlayArrow />
              </Link>
            </p>
          )}
          <p>
            Campeón:{" "}
            {tournamentMatches.data.map((match) => {
              if (
                (match.round === "Final" &&
                  match.homeScore > match.awayScore) ||
                (match.round === "Final" &&
                  match.homePenalties > match.awayPenalties)
              ) {
                return match.home;
              } else if (
                (match.round === "Final" &&
                  match.homeScore < match.awayScore) ||
                (match.round === "Final" &&
                  match.homePenalties < match.awayPenalties)
              ) {
                return match.away;
              }
            })}
          </p>
        </div>
        {
          <div className="matches-container">
            {tournamentMatches.data.map((el) => (
              <div key={el._id} className="match-container">
                <div className="match-tournament-info">
                    <img width='26rem' height='26rem' src={tournament[0].logo} />
                  <p>{el.tournament}</p>
                  <p>{el.round}</p>
                </div>
                <div>
                  <div className="team-score">
                    <div className="team-data">
                      <img
                        alt={`Escudo ${el.home}`}
                        src={getLogo(el.home)}
                        width="30rem"
                        height="30rem"
                      />
                      <p>{el.home}</p>
                    </div>
                    <p>{el.homeScore}</p>
                  </div>
                  <div className="team-score">
                    <div className="team-data">
                      <img
                        alt={`Escudo ${el.away}`}
                        src={getLogo(el.away)}
                        width="30rem"
                        height="30rem"
                      />
                      <p>{el.away}</p>
                    </div>
                    <p>{el.awayScore}</p>
                  </div>
                </div>
                <div className="match-video">
                  {el.video === null ? (
                    <PlayDisabled />
                  ) : (
                    <iframe
                      width="140rem"
                      height="100rem"
                      src={el.video}
                      title={`${el.home} vs ${el.away}`}
                      frameBorder="0"
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                      allowFullScreen
                    ></iframe>
                  )}
                </div>
              </div>
            ))}
          </div>
        }
      </div>
    </>
  );
};

export default Details;
